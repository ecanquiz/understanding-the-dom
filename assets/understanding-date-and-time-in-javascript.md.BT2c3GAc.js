import{_ as a,c as s,o as e,V as i}from"./chunks/framework.C80zbCY-.js";const u=JSON.parse('{"title":"Comprender la Fecha y la Hora en JavaScript","description":"","frontmatter":{},"headers":[],"relativePath":"understanding-date-and-time-in-javascript.md","filePath":"understanding-date-and-time-in-javascript.md"}'),t={name:"understanding-date-and-time-in-javascript.md"},n=i(`<h1 id="comprender-la-fecha-y-la-hora-en-javascript" tabindex="-1">Comprender la Fecha y la Hora en JavaScript <a class="header-anchor" href="#comprender-la-fecha-y-la-hora-en-javascript" aria-label="Permalink to &quot;Comprender la Fecha y la Hora en JavaScript&quot;">‚Äã</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>La fuente original (en ingles) de este tutorial se encuentra <a href="https://www.digitalocean.com/community/tutorials/understanding-date-and-time-in-javascript" target="_blank" rel="noreferrer">aqu√≠</a></p></div><h2 id="introduccion" tabindex="-1">Introducci√≥n <a class="header-anchor" href="#introduccion" aria-label="Permalink to &quot;Introducci√≥n&quot;">‚Äã</a></h2><p>La fecha y la hora son una parte habitual de nuestra vida cotidiana y, por lo tanto, ocupan un lugar destacado en la programaci√≥n inform√°tica. En JavaScript, es posible que tengas que crear un sitio web con un calendario, un horario de trenes o una interfaz para programar citas. Estas aplicaciones deben mostrar horas relevantes seg√∫n la zona horaria actual del usuario, o realizar c√°lculos sobre llegadas y salidas o horas de inicio y finalizaci√≥n. Adem√°s, es posible que necesite utilizar JavaScript para generar un informe a una hora determinada todos los d√≠as o filtrar los restaurantes y establecimientos abiertos actualmente.</p><p>Para lograr todos estos objetivos y m√°s, JavaScript viene con el objeto <code>Date</code> integrado y m√©todos relacionados. Este tutorial explicar√° c√≥mo formatear y usar la fecha y la hora en JavaScript.</p><h2 id="el-objeto-de-fecha" tabindex="-1">El Objeto de Fecha <a class="header-anchor" href="#el-objeto-de-fecha" aria-label="Permalink to &quot;El Objeto de Fecha&quot;">‚Äã</a></h2><p>El <a href="./understanding-objects-in-javascript.html">objeto</a> <code>Date</code> es un objeto integrado en JavaScript que almacena la fecha y la hora. Proporciona una serie de m√©todos integrados para formatear y administrar esos datos.</p><p>De forma predeterminada, un nueva instancia <code>Date</code> sin argumentos proporcionados crea un objeto correspondiente a la fecha y hora actuales. Esto se crear√° de acuerdo con la configuraci√≥n del sistema de la computadora actual.</p><p>Para demostrar el <code>Date</code> de JavaScript, creemos una variable y le asignaremos la fecha actual. Este art√≠culo se escribi√≥ el mi√©rcoles 18 de octubre en Londres (GMT), por lo que la fecha, hora y zona horaria actuales se representan a continuaci√≥n.</p><p>üìÉ<code>now.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Set variable to current date and time</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// View the output</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now;</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Wed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Oct </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2017</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:41:34 GMT+0000 </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UTC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Al observar el resultado, tenemos una cadena de fecha que contiene lo siguiente:</p><table><thead><tr><th>D√≠a de la Semana</th><th>Mes</th><th>D√≠a</th><th>A√±o</th><th>Hora</th><th>Minuto</th><th>Segundo</th><th>Zona Horaria</th></tr></thead><tbody><tr><td>Wed</td><td>Oct</td><td>18</td><td>2017</td><td>12</td><td>41</td><td>34</td><td>GMT+0000 (UTC)</td></tr></tbody></table><p>La fecha y la hora est√°n divididas e impresas de una manera que podemos entender como humanos.</p><p>JavaScript, sin embargo, entiende la fecha bas√°ndose en una <strong>marca de tiempo</strong> derivado del <a href="https://en.wikipedia.org/wiki/Unix_time#History" target="_blank" rel="noreferrer">tiempo de Unix</a>, que es un valor que consiste en el n√∫mero de milisegundos que han pasado desde la medianoche del 1 de enero de 1970. Podemos obtener la marca de tiempo con el m√©todo <code>getTime()</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get the current timestamp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1508330494000</span></span></code></pre></div><p>El n√∫mero grande que aparece en nuestra salida para la marca de tiempo actual representa el mismo valor que el anterior, 18 de octubre de 2017.</p><p>El <strong>tiempo de √âpoca</strong>, tambi√©n referido como hora cero, est√° representada por la cadena de fecha <code>01 January, 1970 00:00:00 Universal Time (UTC)</code> y por la marca de tiempo <code>0</code>. Podemos probar esto en el navegador creando una nueva variable y asign√°ndole una nueva instancia <code>Date</code> basada en una marca de tiempo de <code>0</code>.</p><p>üìÉ<code>epoch.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Assign the timestamp 0 to a new variable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> epochTime</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">epochTime;</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">01</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> January, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1970</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:00:00 Universal Time </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UTC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>El tiempo de √âpoca se eligi√≥ como est√°ndar para que las computadoras midieran el tiempo en los primeros d√≠as de la programaci√≥n, y es el m√©todo que utiliza JavaScript. Es importante comprender el concepto de marca de tiempo y cadena de fecha, ya que ambos pueden usarse dependiendo de la configuraci√≥n y el prop√≥sito de una aplicaci√≥n.</p><p>Hasta ahora, hemos aprendido c√≥mo crear una nueva instancia <code>Date</code> basada en la hora actual y c√≥mo crear una basada en una marca de tiempo. En total, existen cuatro formatos mediante los cuales puede crear un nuevo <code>Date</code> en JavaScript. Adem√°s de la hora actual predeterminada y la marca de tiempo, tambi√©n puede usar una cadena de fecha o especificar fechas y horas particulares.</p><table><thead><tr><th>Creaci√≥n de Fecha</th><th>Salida</th></tr></thead><tbody><tr><td><code>new Date()</code></td><td>Fecha y hora actual</td></tr><tr><td><code>new Date(timestamp)</code></td><td>Crea una fecha basada en milisegundos desde el tiempo de √âpoca</td></tr><tr><td><code>new Date(date string)</code></td><td>Crea una fecha basada en una cadena de fecha</td></tr><tr><td><code>new Date(year, month, day, hours, minutes, seconds, milliseconds)</code></td><td>Crea una fecha basada en la fecha y hora especificadas</td></tr></tbody></table><p>Para demostrar las diferentes formas de hacer referencia a una fecha espec√≠fica, crearemos nuevos objetos <code>Date</code> que representar√°n el 4 de julio de 1776 a las 12:30 p.m. GMT de tres maneras diferentes.</p><p>üìÉ<code>usa.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Timestamp method</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6106015800000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Date string method</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;July 4 1776 12:30&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Date and time method</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1776</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Los tres ejemplos anteriores crean una fecha que contiene la misma informaci√≥n.</p><p>Notar√°s que el m√©todo de marca de tiempo tiene un n√∫mero negativo; cualquier fecha anterior al tiempo de √âpoca se representar√° como un n√∫mero negativo.</p><p>En el m√©todo de fecha y hora, nuestros segundos y milisegundos se establecen en <code>0</code>. Si falta alg√∫n n√∫mero en la creaci√≥n del <code>Date</code>, el valor predeterminado ser√° <code>0</code>. Sin embargo, el orden no se puede cambiar, as√≠ que t√©ngalo en cuenta si decide omitir un n√∫mero. Tambi√©n notar√°s que el mes de julio est√° representado por el <code>6</code>, no por el habitual <code>7</code>. Esto se debe a que los n√∫meros de fecha y hora comienzan desde <code>0</code>, como lo hace la mayor√≠a de los conteos en programaci√≥n. Consulte la siguiente secci√≥n para obtener un cuadro m√°s detallado.</p><h2 id="recuperar-la-fecha-con-get" tabindex="-1">Recuperar la Fecha con <code>get</code> <a class="header-anchor" href="#recuperar-la-fecha-con-get" aria-label="Permalink to &quot;Recuperar la Fecha con \`get\`&quot;">‚Äã</a></h2><p>Una vez que tenemos una fecha, podemos acceder a todos los componentes de la fecha con varios m√©todos integrados. Los m√©todos devolver√°n cada parte de la fecha relativa a la zona horaria local. Cada uno de estos m√©todos comienza con <code>get</code> y devolver√° el n√∫mero relativo. A continuaci√≥n se muestra una tabla detallada de los m√©todos <code>get</code> del objeto <code>Date</code>.</p><table><thead><tr><th>Fecha/Hora</th><th>M√©todo</th><th>Rango</th><th>Ejemplo</th></tr></thead><tbody><tr><td>A√±o</td><td><code>getFullYear()</code></td><td>YYYY</td><td>1970</td></tr><tr><td>Mes</td><td><code>getMonth()</code></td><td>0-11</td><td>0 = Enero</td></tr><tr><td>D√≠a (del mes)</td><td><code>getDate()</code></td><td>1-31</td><td>1 = 1¬∞ del mes</td></tr><tr><td>D√≠a (de la semana)</td><td><code>getDay()</code></td><td>0-6</td><td>0 = Domingo</td></tr><tr><td>Hora</td><td><code>getHours()</code></td><td>0-23</td><td>0 = medianoche</td></tr><tr><td>Minuto</td><td><code>getMinutes()</code></td><td>0-59</td><td></td></tr><tr><td>Second</td><td><code>getSeconds()</code></td><td>0-59</td><td></td></tr><tr><td>Milisegundo</td><td><code>getMilliseconds()</code></td><td>0-999</td><td></td></tr><tr><td>Marca de tiempo</td><td><code>getTime()</code></td><td>Milisegundos desde el tiempo de √âpoca</td><td></td></tr></tbody></table><p>Hagamos una nueva fecha, basada en el 31 de julio de 1980, y asign√©mosla a una variable.</p><p>üìÉ<code>harryPotter.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Initialize a new birthday instance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> birthday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1980</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Ahora podemos usar todos nuestros m√©todos para obtener cada componente de fecha, desde a√±o hasta milisegundo.</p><p>üìÉ<code>getDateComponents.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFullYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1980</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 31</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHours</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMinutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMilliseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 333849600000 (for GMT)</span></span></code></pre></div><p>A veces puede ser necesario extraer s√≥lo una parte de una fecha, y los m√©todos <code>get</code> integrados son la herramienta que utilizar√° para lograrlo.</p><p>Como ejemplo de esto, podemos comparar la fecha actual con el d√≠a y mes del 3 de octubre para ver si es 3 de octubre o no.</p><p>üìÉ<code>oct3.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get today&#39;s date</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> today</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Compare today with October 3rd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (today.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> today.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;It&#39;s October 3rd.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;It&#39;s not October 3rd.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">It</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;s not October 3rd.</span></span></code></pre></div><p>Dado que, al momento de escribir este art√≠culo, no es el 3 de octubre, la consola lo refleja.</p><p>Los m√©todos <code>Date</code> integrados que comienzan con <code>get</code> nos permiten acceder a componentes de fecha que devuelven el n√∫mero asociado con lo que estamos recuperando del objeto instanciado.</p><h2 id="modificando-la-fecha-con-set" tabindex="-1">Modificando la Fecha con <code>set</code> <a class="header-anchor" href="#modificando-la-fecha-con-set" aria-label="Permalink to &quot;Modificando la Fecha con \`set\`&quot;">‚Äã</a></h2><p>Para todos los m√©todos <code>get</code> que aprendimos anteriormente, existe un m√©todo <code>set</code> correspondiente. Donde <code>get</code> se usa para recuperar un componente espec√≠fico de una fecha, <code>set</code> se usa para modificar componentes de una fecha. A continuaci√≥n se muestra un cuadro detallado de los m√©todos <code>set</code> del objeto <code>Date</code>.</p><table><thead><tr><th>Fecha/Hora</th><th>M√©todo</th><th>Rango</th><th>Ejemplo</th></tr></thead><tbody><tr><td>A√±o</td><td><code>setFullYear()</code></td><td>YYYY</td><td>1970</td></tr><tr><td>Mes</td><td><code>setMonth()</code></td><td>0-11</td><td>0 = Enero</td></tr><tr><td>D√≠a (del mes)</td><td><code>setDate()</code></td><td>1-31</td><td>1 = 1¬∞ del mes</td></tr><tr><td>D√≠a (de la semana)</td><td><code>setDay()</code></td><td>0-6</td><td>0 = Domingo</td></tr><tr><td>Hora</td><td><code>setHours()</code></td><td>0-23</td><td>0 = medianoche</td></tr><tr><td>Minuto</td><td><code>setMinutes()</code></td><td>0-59</td><td></td></tr><tr><td>Second</td><td><code>setSeconds()</code></td><td>0-59</td><td></td></tr><tr><td>Milisegundo</td><td><code>setMilliseconds()</code></td><td>0-999</td><td></td></tr><tr><td>Marca de tiempo</td><td><code>setTime()</code></td><td>Milisegundos desde el tiempo de √âpoca</td><td></td></tr></tbody></table><p>Podemos utilizar estos m√©todos <code>set</code> para modificar uno, m√°s o todos los componentes de una fecha. Por ejemplo, podemos cambiar el a√±o de nuestra variable <code>birthday</code> anterior para que sea <code>1997</code> en lugar de <code>1980</code>.</p><p>üìÉ<code>harryPotter.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Change year of birthday date</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFullYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1997</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">birthday;</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Thu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Jul </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1997</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:00:00 GMT+0000 </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UTC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Vemos en el ejemplo anterior que cuando llamamos a la variable <code>birthday</code> recibimos el a√±o nuevo como parte del resultado.</p><p>Los m√©todos integrados que comienzan con <code>set</code> nos permiten modificar diferentes partes de un objeto <code>Date</code>.</p><h2 id="metodos-fecha-con-utc" tabindex="-1">M√©todos Fecha con UTC <a class="header-anchor" href="#metodos-fecha-con-utc" aria-label="Permalink to &quot;M√©todos Fecha con UTC&quot;">‚Äã</a></h2><p>Los m√©todos <code>get</code> discutidos anteriormente recuperan los componentes de fecha seg√∫n la configuraci√≥n de zona horaria local del usuario. Para un mayor control sobre las fechas y horas, puede utilizar los m√©todos <code>getUTC</code>, que son exactamente iguales a los m√©todos <code>get</code>, excepto que calculan la hora bas√°ndose en el est√°ndar <a href="https://en.wikipedia.org/wiki/Coordinated_Universal_Time" target="_blank" rel="noreferrer">UTC (Tiempo Universal Coordinado)</a>. A continuaci√≥n se muestra una tabla de los m√©todos UTC para el objeto <code>Date</code> de JavaScript.</p><table><thead><tr><th>Fecha/Hora</th><th>M√©todo</th><th>Rango</th><th>Ejemplo</th></tr></thead><tbody><tr><td>A√±o</td><td><code>getUTCFullYear()</code></td><td>YYYY</td><td>1970</td></tr><tr><td>Mes</td><td><code>getUTCMonth()</code></td><td>0-11</td><td>0 = Enero</td></tr><tr><td>D√≠a (del mes)</td><td><code>getUTCDate()</code></td><td>1-31</td><td>1 = 1¬∞ del mes</td></tr><tr><td>D√≠a (de la semana)</td><td><code>getUTCDay()</code></td><td>0-6</td><td>0 = Domingo</td></tr><tr><td>Hora</td><td><code>getUTCHours()</code></td><td>0-23</td><td>0 = medianoche</td></tr><tr><td>Minuto</td><td><code>getUTCMinutes()</code></td><td>0-59</td><td></td></tr><tr><td>Second</td><td><code>getUTCSeconds()</code></td><td>0-59</td><td></td></tr><tr><td>Milisegundo</td><td><code>getUTCMilliseconds()</code></td><td>0-999</td><td></td></tr></tbody></table><p>Para probar la diferencia entre los m√©todos <code>get</code> local y UTC, podemos ejecutar el siguiente c√≥digo.</p><p>üìÉ<code>UTC.js</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Assign current time to a variable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Print local and UTC timezones</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHours</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUTCHours</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><p>Al ejecutar este c√≥digo se imprimir√° la hora actual y la hora de la zona horaria UTC. Si actualmente se encuentra en la zona horaria UTC, los n√∫meros que se obtienen al ejecutar el programa anterior ser√°n los mismos.</p><p>UTC es √∫til porque proporciona una referencia est√°ndar de hora internacional y, por lo tanto, puede mantener su c√≥digo consistente en todas las zonas horarias si eso es aplicable a lo que est√° desarrollando.</p><h2 id="conclusion" tabindex="-1">Conclusi√≥n <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusi√≥n&quot;">‚Äã</a></h2><p>En este tutorial, aprendimos c√≥mo crear una instancia del objeto <code>Date</code> y usar sus m√©todos integrados para acceder y modificar componentes de una fecha espec√≠fica. Para obtener una vista m√°s detallada de las fechas y horas en JavaScript, puede leer la <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noreferrer">referencia de Fecha en Mozilla Developer Network</a>.</p><p>Saber c√≥mo trabajar con fechas es esencial para muchas tareas comunes en JavaScript, ya que esto puede permitirle hacer muchas cosas, desde configurar un informe repetido hasta mostrar fechas y programaciones en la zona horaria correcta.</p>`,68),d=[n];function o(l,h,r,p,c,k){return e(),s("div",null,d)}const m=a(t,[["render",o]]);export{u as __pageData,m as default};
